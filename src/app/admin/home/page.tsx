// src/app/admin/home/page.tsx
'use client'
import React, { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import styles from '@/styles/admin/AdminHome.module.css'

interface HomeData {
  title: string;
  description: string;
  features: string[];
  images: string[];
  workingHours: string;
  address: string;
  phone: string;
}

const AdminHomePage = () => {
  const [homeData, setHomeData] = useState<HomeData>({
    title: '',
    description: '',
    features: [''],
    images: [''],
    workingHours: '',
    address: '',
    phone: ''
  })
  const [loading, setLoading] = useState(true)
  const [saving, setSaving] = useState(false)
  const [message, setMessage] = useState('')
  const router = useRouter()

  useEffect(() => {
    fetchHomeData()
  }, [])

  const fetchHomeData = async () => {
    try {
      const response = await fetch('/api/data/home')
      if (response.ok) {
        const data = await response.json()
        setHomeData(data)
      }
    } catch (error) {
      console.error('Error fetching home data:', error)
      setMessage('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö')
    } finally {
      setLoading(false)
    }
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setSaving(true)
    setMessage('')

    try {
      const response = await fetch('/api/admin/home', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(homeData),
        credentials: 'include'
      })

      if (response.ok) {
        setMessage('–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!')
        setTimeout(() => setMessage(''), 3000)
      } else {
        setMessage('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö')
      }
    } catch (error) {
      setMessage('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞')
    } finally {
      setSaving(false)
    }
  }

  const handleInputChange = (field: keyof HomeData, value: string) => {
    setHomeData(prev => ({ ...prev, [field]: value }))
  }

  const handleArrayChange = (field: 'features' | 'images', index: number, value: string) => {
    setHomeData(prev => ({
      ...prev,
      [field]: prev[field].map((item, i) => i === index ? value : item)
    }))
  }

  const addArrayItem = (field: 'features' | 'images') => {
    setHomeData(prev => ({
      ...prev,
      [field]: [...prev[field], '']
    }))
  }

  const removeArrayItem = (field: 'features' | 'images', index: number) => {
    setHomeData(prev => ({
      ...prev,
      [field]: prev[field].filter((_, i) => i !== index)
    }))
  }

  if (loading) {
    return (
      <div className={styles.loading}>
        <div className={styles.loadingSpinner}>üè†</div>
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      </div>
    )
  }

  return (
    <div className={styles.adminHomePage}>
      <div className={styles.pageHeader}>
        <h1 className={styles.pageTitle}>
          <span className={styles.titleIcon}>üè†</span>
          –ö–µ—Ä—É–≤–∞–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ—é —Å—Ç–æ—Ä—ñ–Ω–∫–æ—é
        </h1>
        <p className={styles.pageSubtitle}>
          –†–µ–¥–∞–≥—É–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Å–∞–π—Ç—É
        </p>
      </div>

      {message && (
        <div className={`${styles.message} ${message.includes('—É—Å–ø—ñ—à–Ω–æ') ? styles.success : styles.error}`}>
          <span className={styles.messageIcon}>
            {message.includes('—É—Å–ø—ñ—à–Ω–æ') ? '‚úÖ' : '‚ùå'}
          </span>
          {message}
        </div>
      )}

      <form onSubmit={handleSubmit} className={styles.adminForm}>
        <div className={styles.formGrid}>
          {/* Basic Info Section */}
          <div className={styles.formSection}>
            <h2 className={styles.sectionTitle}>
              <span className={styles.sectionIcon}>üìù</span>
              –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
            </h2>

            <div className={styles.inputGroup}>
              <label className={styles.inputLabel}>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∞–π—Ç—É</label>
              <input
                type="text"
                value={homeData.title}
                onChange={(e) => handleInputChange('title', e.target.value)}
                className={styles.input}
                placeholder="–ù–∞–∑–≤–∞ —Ä–æ–∑–≤–∞–∂–∞–ª—å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä—É"
                required
              />
            </div>

            <div className={styles.inputGroup}>
              <label className={styles.inputLabel}>–û–ø–∏—Å</label>
              <textarea
                value={homeData.description}
                onChange={(e) => handleInputChange('description', e.target.value)}
                className={styles.textarea}
                placeholder="–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å —Ü–µ–Ω—Ç—Ä—É"
                rows={4}
                required
              />
            </div>
          </div>

          {/* Contact Info Section */}
          <div className={styles.formSection}>
            <h2 className={styles.sectionTitle}>
              <span className={styles.sectionIcon}>üìû</span>
              –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
            </h2>

            <div className={styles.inputGroup}>
              <label className={styles.inputLabel}>–†–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏</label>
              <input
                type="text"
                value={homeData.workingHours}
                onChange={(e) => handleInputChange('workingHours', e.target.value)}
                className={styles.input}
                placeholder="–ü–Ω-–ù–¥: 10:00 - 21:00"
                required
              />
            </div>

            <div className={styles.inputGroup}>
              <label className={styles.inputLabel}>–ê–¥—Ä–µ—Å–∞</label>
              <input
                type="text"
                value={homeData.address}
                onChange={(e) => handleInputChange('address', e.target.value)}
                className={styles.input}
                placeholder="–≤—É–ª. –î–∏—Ç—è—á–∞, 15, –º. –í—ñ–Ω–Ω–∏—Ü—è"
                required
              />
            </div>

            <div className={styles.inputGroup}>
              <label className={styles.inputLabel}>–¢–µ–ª–µ—Ñ–æ–Ω</label>
              <input
                type="tel"
                value={homeData.phone}
                onChange={(e) => handleInputChange('phone', e.target.value)}
                className={styles.input}
                placeholder="+38 (093) 123-45-67"
                required
              />
            </div>
          </div>

          {/* Features Section */}
          <div className={styles.formSection}>
            <h2 className={styles.sectionTitle}>
              <span className={styles.sectionIcon}>‚≠ê</span>
              –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ —Ü–µ–Ω—Ç—Ä—É
            </h2>

            {homeData.features.map((feature, index) => (
              <div key={index} className={styles.arrayInputGroup}>
                <input
                  type="text"
                  value={feature}
                  onChange={(e) => handleArrayChange('features', index, e.target.value)}
                  className={styles.input}
                  placeholder="üéà –ù–∞–∑–≤–∞ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ"
                />
                <button
                  type="button"
                  onClick={() => removeArrayItem('features', index)}
                  className={styles.removeButton}
                  disabled={homeData.features.length === 1}
                >
                  ‚ùå
                </button>
              </div>
            ))}

            <button
              type="button"
              onClick={() => addArrayItem('features')}
              className={styles.addButton}
            >
              ‚ûï –î–æ–¥–∞—Ç–∏ –æ—Å–æ–±–ª–∏–≤—ñ—Å—Ç—å
            </button>
          </div>

          {/* Images Section */}
          <div className={styles.formSection}>
            <h2 className={styles.sectionTitle}>
              <span className={styles.sectionIcon}>üñºÔ∏è</span>
              –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
            </h2>

            {homeData.images.map((image, index) => (
              <div key={index} className={styles.arrayInputGroup}>
                <input
                  type="url"
                  value={image}
                  onChange={(e) => handleArrayChange('images', index, e.target.value)}
                  className={styles.input}
                  placeholder="https://example.com/image.jpg"
                />
                <button
                  type="button"
                  onClick={() => removeArrayItem('images', index)}
                  className={styles.removeButton}
                  disabled={homeData.images.length === 1}
                >
                  ‚ùå
                </button>
              </div>
            ))}

            <button
              type="button"
              onClick={() => addArrayItem('images')}
              className={styles.addButton}
            >
              ‚ûï –î–æ–¥–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            </button>
          </div>
        </div>

        <div className={styles.formActions}>
          <button
            type="button"
            onClick={() => router.push('/admin')}
            className={styles.cancelButton}
          >
            ‚¨ÖÔ∏è –ù–∞–∑–∞–¥
          </button>
          
          <button
            type="submit"
            disabled={saving}
            className={styles.saveButton}
          >
            {saving ? (
              <>
                <span className={styles.spinner}>‚è≥</span>
                –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...
              </>
            ) : (
              <>
                üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏
              </>
            )}
          </button>
        </div>
      </form>
    </div>
  )
}

export default AdminHomePage