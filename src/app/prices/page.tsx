'use client'
import React, { useState, useEffect } from 'react'
import PriceCard from '@/components/PriceCard'
import styles from '@/styles/Prices.module.css'
import { Button } from '@/components/ui/button';

interface PriceItem {
  _id?: string;
  name: string;
  price: string;
  description: string;
  duration?: string;
  category: string;
}

const PricesPage = () => {
  const [prices, setPrices] = useState<PriceItem[]>([])
  const [loading, setLoading] = useState(true)
  const [selectedCategory, setSelectedCategory] = useState('all')

  useEffect(() => {
    fetchPrices()
  }, [])

  const fetchPrices = async () => {
    try {
      const response = await fetch('/api/data/prices')
      if (response.ok) {
        const data = await response.json()
        setPrices(data)
      } else {
        // Fallback data
        setPrices([
          {
            name: "–î–∏—Ç—è—á–∞ —ñ–≥—Ä–æ–≤–∞ –∑–æ–Ω–∞",
            price: "150",
            description: "–î–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—Ö —ñ–≥—Ä–æ–≤–∏—Ö –∞—Ç—Ä–∞–∫—Ü—ñ–æ–Ω—ñ–≤ –¥–ª—è –¥—ñ—Ç–µ–π –¥–æ 12 —Ä–æ–∫—ñ–≤",
            duration: "2 –≥–æ–¥–∏–Ω–∏",
            category: "games"
          },
          {
            name: "–°—ñ–º–µ–π–Ω–∏–π –ø–∞–∫–µ—Ç",
            price: "400",
            description: "–Ü–≥—Ä–æ–≤–∞ –∑–æ–Ω–∞ + –∫–∞—Ñ–µ –¥–ª—è —Å—ñ–º'—ó –¥–æ 4 –æ—Å—ñ–±",
            duration: "3 –≥–æ–¥–∏–Ω–∏",
            category: "family"
          },
          {
            name: "–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–±–∞–∑–æ–≤–∏–π)",
            price: "800",
            description: "–°–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è –¥–ª—è 8 –¥—ñ—Ç–µ–π: –¥–µ–∫–æ—Ä, –∞–Ω—ñ–º–∞—Ç–æ—Ä, —Ç–æ—Ä—Ç",
            duration: "2 –≥–æ–¥–∏–Ω–∏",
            category: "birthday"
          },
          {
            name: "–î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–ø—Ä–µ–º—ñ—É–º)",
            price: "1200",
            description: "–†–æ–∑—à–∏—Ä–µ–Ω–µ —Å–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è: —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ, —à–æ—É –ø—Ä–æ–≥—Ä–∞–º–∞, –ø–æ–¥–∞—Ä—É–Ω–∫–∏",
            duration: "3 –≥–æ–¥–∏–Ω–∏",
            category: "birthday"
          },
          {
            name: "–ê–Ω—ñ–º–∞—Ç–æ—Ä",
            price: "300",
            description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –∞–Ω—ñ–º–∞—Ç–æ—Ä –Ω–∞ –≤–∞—àe —Å–≤—è—Ç–æ",
            duration: "1 –≥–æ–¥–∏–Ω–∞",
            category: "services"
          },
          {
            name: "–§–æ—Ç–æ—Å–µ—Å—ñ—è",
            price: "500",
            description: "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ —Ñ–æ—Ç–æ—Å–µ—Å—ñ—è –≤ –Ω–∞—à—ñ–π —Ñ–æ—Ç–æ–∑–æ–Ω—ñ",
            duration: "1 –≥–æ–¥–∏–Ω–∞",
            category: "services"
          },
          {
            name: "–ú–∞–π—Å—Ç–µ—Ä-–∫–ª–∞—Å",
            price: "200",
            description: "–¢–≤–æ—Ä—á–∏–π –º–∞–π—Å—Ç–µ—Ä-–∫–ª–∞—Å –¥–ª—è –¥—ñ—Ç–µ–π",
            duration: "1 –≥–æ–¥–∏–Ω–∞",
            category: "services"
          },
          {
            name: "–û—Ä–µ–Ω–¥–∞ –∑–∞–ª—É",
            price: "1000",
            description: "–û—Ä–µ–Ω–¥–∞ –≤—Å—å–æ–≥–æ –∑–∞–ª—É –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –∑–∞—Ö–æ–¥—ñ–≤",
            duration: "4 –≥–æ–¥–∏–Ω–∏",
            category: "family"
          }
        ])
      }
    } catch (error) {
      console.error('Error fetching prices:', error)
    } finally {
      setLoading(false)
    }
  }

  const categories = [
    { key: 'all', label: '–í—Å—ñ –ø–æ—Å–ª—É–≥–∏', icon: 'üé™' },
    { key: 'games', label: '–Ü–≥—Ä–æ–≤—ñ –∑–æ–Ω–∏', icon: 'üéÆ' },
    { key: 'birthday', label: '–î–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è', icon: 'üéÇ' },
    { key: 'family', label: '–°—ñ–º–µ–π–Ω—ñ –ø–∞–∫–µ—Ç–∏', icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶' },
    { key: 'services', label: '–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏', icon: '‚≠ê' }
  ]

  const filteredPrices = selectedCategory === 'all' 
    ? prices 
    : prices.filter(price => price.category === selectedCategory)

  if (loading) {
    return (
      <div className={styles.loading}>
        <div className={styles.loadingSpinner}>üí∞</div>
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–Ω...</p>
      </div>
    )
  }

  return (
    <div className={styles.pricesPage}>
      <div className="container">
        {/* Header */}
        <section className={styles.header}>
          <h1 className={styles.title}>–ù–∞—à—ñ —Ü—ñ–Ω–∏</h1>
          <p className={styles.subtitle}>
            –î–æ—Å—Ç—É–ø–Ω—ñ —Ü—ñ–Ω–∏ –Ω–∞ –≤—Å—ñ —Ä–æ–∑–≤–∞–≥–∏ –¥–ª—è –≤–∞—à–æ—ó —Ä–æ–¥–∏–Ω–∏
          </p>
          <div className={styles.headerDecoration}>
            <span className={styles.decorIcon}>üí∞</span>
            <span className={styles.decorIcon}>üéà</span>
            <span className={styles.decorIcon}>üé™</span>
          </div>
        </section>

        {/* Category Filter */}
        <section className={styles.filterSection}>
          <div className={styles.categoryFilter}>
            {categories.map(category => (
              <button
                key={category.key}
                className={`${styles.categoryButton} ${
                  selectedCategory === category.key ? styles.active : ''
                }`}
                onClick={() => setSelectedCategory(category.key)}
              >
                <span className={styles.categoryIcon}>{category.icon}</span>
                <span className={styles.categoryLabel}>{category.label}</span>
              </button>
            ))}
          </div>
        </section>

        {/* Prices Grid */}
        <section className={styles.pricesSection}>
          <div className={styles.pricesGrid}>
            {filteredPrices.map((price, index) => (
              <PriceCard
                key={price._id || index}
                name={price.name}
                price={price.price}
                description={price.description}
                duration={price.duration}
                category={price.category}
                index={index}
              />
            ))}
          </div>
        </section>

        {/* CTA Section */}
        {/* <section className={styles.ctaSection}>
          <div className={styles.ctaCard}>
            <h2 className={styles.ctaTitle}>–ì–æ—Ç–æ–≤—ñ –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏?</h2>
            <p className={styles.ctaText}>
              –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –Ω–∞–º –∞–±–æ –∑–∞–≤—ñ—Ç–∞–π—Ç–µ –æ—Å–æ–±–∏—Å—Ç–æ –¥–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Å–≤—è—Ç–∞
            </p>
            <div className={styles.ctaButtons}>
              <a href="tel:+380931234567" className="btn-primary">
                üìû –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏
              </a>
              <a href="/news-contacts" className="btn-secondary">
                üìç –ö–æ–Ω—Ç–∞–∫—Ç–∏
              </a>
            </div>
          </div>
        </section> */}
      </div>
      
      {/* –ê–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏ */}
      <section className={styles.offersSection}>
        <div className={styles.containerInner}>
          <div className={styles.offersWrapper}>
            <h2 className={styles.offersTitle}>–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó</h2>
            <div className={styles.offersGrid}>
              <div className={styles.offerItem}>
                <h3 className={styles.offerTitle}>–ó–Ω–∏–∂–∫–∞ 10%</h3>
                <p className={styles.offerDescription}>–ù–∞ –ø–µ—Ä—à–µ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è</p>
              </div>
              <div className={styles.offerItem}>
                <h3 className={styles.offerTitle}>–î–µ–Ω—å —Å—ñ–º'—ó</h3>
                <p className={styles.offerDescription}>–ù–µ–¥—ñ–ª—è - –∑–Ω–∏–∂–∫–∞ 15% –¥–ª—è —Ä–æ–¥–∏–Ω</p>
              </div>
              <div className={styles.offerItem}>
                <h3 className={styles.offerTitle}>–ê–±–æ–Ω–µ–º–µ–Ω—Ç</h3>
                <p className={styles.offerDescription}>10 –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—å - –µ–∫–æ–Ω–æ–º—ñ—è 20%</p>
              </div>
            </div>
            <Button
              variant="hero"
              size="xl"
              className={styles.discountButton}
            >
              –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –∑—ñ –∑–Ω–∏–∂–∫–æ—é
            </Button>
          </div>
        </div>
      </section>
    </div>
  )
}

export default PricesPage